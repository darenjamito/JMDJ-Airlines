<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>JMDJ Airlines - List of Flights</title>
        <link rel="icon" href="/images/Logo 1.png" type="image/png">
        <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600;700&display=swap" rel="stylesheet">
        <link rel="stylesheet" href="/styles.css">
        <link rel="stylesheet" href="/css/admin-modal.css">
        <script src="https://kit.fontawesome.com/64d58efce2.js" crossorigin="anonymous"></script>
        <style>
            /* Existing styles */
            /* ... */

            /* Modal styles */
            .modal {
                position: fixed;
                z-index: 1000;
                left: 0;
                top: 0;
                width: 100%;
                height: 100vh;
                background-color: rgba(0,0,0,0.5);
                opacity: 0;
                visibility: hidden;
                display: flex;
                align-items: center;
                justify-content: center;
                transition: opacity 0.3s ease, visibility 0.3s ease;
            }

            .modal.show {
                opacity: 1;
                visibility: visible;
            }

            .modal-content {
                background-color: #fff;
                padding: 0;
                width: min(500px, 90%);
                border-radius: 8px;
                box-shadow: 0 4px 6px rgba(0,0,0,0.1);
                animation: slideIn 0.3s ease forwards;
                position: relative;
                max-height: min(600px, 90vh);
                overflow-y: auto;
                transform: translateY(-20px);
                opacity: 0;
            }

            .show .modal-content {
                transform: translateY(0);
                opacity: 1;
            }

            @keyframes slideIn {
                from {
                    transform: translateY(-20px);
                    opacity: 0;
                }
                to {
                    transform: translateY(0);
                    opacity: 1;
                }
            }

            .modal-header {
                padding: 15px 20px;
                background-color: #f8f9fa;
                border-bottom: 1px solid #dee2e6;
                border-radius: 8px 8px 0 0;
                display: flex;
                justify-content: space-between;
                align-items: center;
            }

            .modal-header h3 {
                margin: 0;
                color: #212529;
            }

            .close {
                color: #aaa;
                font-size: 28px;
                font-weight: bold;
                cursor: pointer;
                transition: color 0.2s;
            }

            .close:hover {
                color: #000;
            }

            .modal-body {
                padding: 20px;
                color: #495057;
            }

            .modal-footer {
                padding: 15px 20px;
                display: flex;
                justify-content: flex-end;
                gap: 10px;
                border-top: 1px solid #dee2e6;
            }

            .modal-footer button {
                flex: 1;
                padding: 8px 16px;
                border: none;
                border-radius: 4px;
                cursor: pointer;
                font-family: inherit;
                font-size: 14px;
                transition: background-color 0.2s;
            }

            .btn-secondary {
                background-color: #6c757d;
                color: white;
            }

            .btn-secondary:hover {
                background-color: #5a6268;
            }

            .btn-danger {
                background-color: #dc3545;
                color: white;
            }

            .btn-danger:hover {
                background-color: #c82333;
            }

            .cancel-btn, .confirm-delete-btn {
                padding: 8px 16px;
                border-radius: 4px;
                border: none;
                cursor: pointer;
                font-weight: 500;
                transition: all 0.2s;
            }

            .cancel-btn {
                background-color: #e9ecef;
                color: #495057;
            }

            .cancel-btn:hover {
                background-color: #dee2e6;
            }

            .confirm-delete-btn {
                background-color: #dc3545;
                color: white;
            }

            .confirm-delete-btn:hover {
                background-color: #c82333;
            }

            /* Consistent font sizes for all form fields */
            .departure-selection-select,
            .arrival-selection-select,
            .date-input,
            .departure-time-input,
            .arrival-time-input,
            .flight-no-input,
            .price-input,
            input[type="date"],
            input[type="time"],
            select,
            input[type="text"],
            input[type="number"] {
                font-size: 14px !important;
                font-family: inherit;
            }

            /* Ensure select options have consistent font size */
            select option {
                font-size: 14px;
                font-family: inherit;
            }

            /* Placeholder text style */
            .departure-selection-select option[disabled],
            .arrival-selection-select option[disabled] {
                color: #757575;
            }

            /* Consistent form field styling */
            .departure-selection-select,
            .arrival-selection-select,
            .date-input,
            .departure-time-input,
            .arrival-time-input,
            .flight-no-input,
            .price-input {
                border: 1px solid #ced4da;
                border-radius: 4px;
                padding: 8px 12px;
                width: 100%;
                transition: border-color 0.2s ease;
            }

            .departure-selection-select:focus,
            .arrival-selection-select:focus,
            .date-input:focus,
            .departure-time-input:focus,
            .arrival-time-input:focus,
            .flight-no-input:focus,
            .price-input:focus {
                outline: none;
                border-color: #FFD700;
                box-shadow: 0 0 0 2px rgba(255, 215, 0, 0.25);
            }

            /* Readonly input specific style */
            .flight-no-input[readonly] {
                background-color: #f8f9fa;
                cursor: not-allowed;
            }

            /* Make all form labels bold */
            .departure-label, .date-label, 
            .departure-time-label, .arrival-label,
            .arrival-date-label, .arrival-time-label,
            .flight-no-label, .price-label {
                font-weight: 600;
                margin-bottom: 8px;
            }

            /* Override date input border styles */
            input[type="date"] {
                border: 1px solid #ced4da !important;
                -webkit-appearance: none;
                -moz-appearance: none;
                appearance: none;
            }

            input[type="date"]::-webkit-calendar-picker-indicator {
                cursor: pointer;
                opacity: 0.6;
            }

            input[type="date"]::-webkit-calendar-picker-indicator:hover {
                opacity: 1;
            }
        </style>
    </head>
    <body>
        <header class="header">
            <div class="logo">
                <img src="/images/Logo 3.png" alt="JMDJ Airlines Logo">
            </div>
            <nav>
                <ul id="navbar">
                    <li><a href="/admin/dashboard">Dashboard</a></li>
                    <li><a href="/admin/flights" class="active">List of Flights</a></li>
                    <li><a href="/admin/bookings">Bookings</a></li>
                    <li><a href="/admin/users">Users</a></li>
                    <li><a href="#" onclick="event.preventDefault(); showLogoutModal()">Logout</a></li>
                </ul>
            </nav>
        </header>
            
        <section class="grouped-container">
            <h2>
                <% if (isSearchResults) { %>
                    <span>Search Results</span>
                <% } else { %>
                    <span>Flight List</span>
                <% } %>
                <button class="add-flight-btn" onclick="window.location.href='/admin/flights/add'">
                    <i class="fas fa-plus"></i> Add Flight
                </button>
            </h2>
            <div class="admin-flight-container">
                <% if (flights && flights.length > 0) { %>
                    <% flights.forEach(flight => { %>
                        <div class="flight-info-container">
                            <div class="details">
                                <h3><%= flight.Depart %></h3>
                                <p><i class="far fa-clock"></i> <%= flight.Depart_Time %></p>
                                <p><i class="far fa-calendar-alt"></i> <%= flight.Depart_Date %></p>
                            </div>
                            <div class="arrow"><i class="fas fa-plane"></i></div>
                            <div class="details">
                                <h3><%= flight.Arrival %></h3>
                                <p><i class="far fa-clock"></i> <%= flight.Arrival_Time %></p>
                                <p><i class="far fa-calendar-alt"></i> <%= flight.Arrival_Date %></p>
                            </div>
                            <div class="duration"><i class="fas fa-clock"></i> <%= flight.Flight_Duration %></div>
                            <div class="flight-code"><i class="fas fa-hashtag"></i> <%= flight.Flight_Code %></div>
                            <div class="price"><%= flight.Ticket_Price %></div>
                            <div class="admin-buttons">
                                <button class="edit-btn" 
                                    data-flight-number="<%= flight.Flight_Code %>" 
                                    data-departure="<%= flight.Depart %>" 
                                    data-arrival="<%= flight.Arrival %>"
                                    data-depart-date="<%= flight.Depart_Date %>"
                                    data-arrival-date="<%= flight.Arrival_Date %>"
                                    data-departure-time="<%= flight.Depart_Time %>" 
                                    data-arrival-time="<%= flight.Arrival_Time %>" 
                                    data-price="<%= flight.Ticket_Price %>">
                                    <i class="fas fa-edit"></i> Edit
                                </button>
                                <button class="remove-btn" onclick="showDeleteModal('<%= flight._id %>')">
                                    <i class="fas fa-trash"></i> Remove
                                </button>
                            </div>
                        </div>
                    <% }); %>
                <% } else { %>
                    <div class="no-flights-message">
                        <% if (isSearchResults) { %>
                            <p>No flights found matching your search criteria.</p>
                        <% } else { %>
                            <p>No flights available.</p>
                        <% } %>
                    </div>
                <% } %>
            </div>
        </section>

        <div class="action-buttons">
            <button class="exit-btn" onclick="window.location.href='/admin/dashboard'">
                <i class="fas fa-arrow-left"></i> Back
            </button>
            <button class="search-flight-btn" onclick="window.location.href='/admin/dashboard#search-flights'">
                <i class="fas fa-search"></i> Search Flight
            </button>
        </div>

        <!-- Delete Flight Modal -->
        <div id="deleteModal" class="modal">
            <div class="modal-content">
                <div class="modal-header">
                    <h3>Confirm Delete</h3>
                    <span class="close" onclick="closeDeleteModal()">&times;</span>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to delete this flight? This action cannot be undone.</p>
                </div>
                <div class="modal-footer">
                    <button onclick="closeDeleteModal()" class="btn btn-secondary">Cancel</button>
                    <button onclick="confirmDelete()" class="btn btn-danger">Delete</button>
                </div>
            </div>
        </div>

        <!-- Logout Confirmation Modal -->
        <div id="logoutModal" class="modal">
            <div class="modal-content">
                <div class="modal-header">
                    <h3>Confirm Logout</h3>
                    <span class="close">&times;</span>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to logout?</p>
                </div>
                <div class="modal-footer">
                    <button class="cancel-btn" onclick="closeModal('logoutModal')">Cancel</button>
                    <button class="confirm-delete-btn" onclick="confirmLogout()">Logout</button>
                </div>
            </div>
        </div>

        <!-- Edit Flight Modal -->
        <div id="editFlightModal" class="modal">
            <div class="modal-content">
                <div class="modal-header">
                    <h3>Edit Flight</h3>
                    <span class="close" onclick="closeEditModal()">&times;</span>
                </div>
                <div class="modal-body">
                    <div class="vertical-container">
                        <div class="departure-container">
                            <p class="departure-label">Departure</p>
                            <select id="editDeparture" class="departure-selection-select">
                                <option value="" disabled selected hidden>Select Origin</option>
                                <option value="Cagayan de Oro">Cagayan de Oro (Local)</option>
                                <option value="Cebu">Cebu (Local)</option>
                                <option value="Davao">Davao (Local)</option>
                                <option value="Manila">Manila (Local)</option>
                            </select>
                        </div>
                        <div class="date-container">
                            <p class="date-label">Departure Date</p>
                            <input type="date" id="editDepartDate" class="date-input">
                        </div>
                        <div class="departure-time-container">
                            <p class="departure-time-label">Departure Time</p>
                            <input type="time" id="editDepartureTime" class="departure-time-input">
                        </div>
                        <div class="arrival-container">
                            <p class="arrival-label">Arrival</p>
                            <select id="editArrival" class="arrival-selection-select">
                                <option value="" disabled selected hidden>Select Destination</option>
                                <option value="Cagayan de Oro">Cagayan de Oro (Local)</option>
                                <option value="Cebu">Cebu (Local)</option>
                                <option value="Davao">Davao (Local)</option>
                                <option value="Manila">Manila (Local)</option>
                                <option value="Tokyo">Japan (International)</option>
                                <option value="Singapore">Singapore (International)</option>
                                <option value="Incheon">South Korea (International)</option>
                                <option value="London">United Kingdom (International)</option>
                                <option value="Los Angeles">United States (International)</option>
                            </select>
                        </div>
                        <div class="arrival-date-container">
                            <p class="arrival-date-label">Arrival Date</p>
                            <input type="date" id="editArrivalDate" class="date-input">
                        </div>
                        <div class="arrival-time-container">
                            <p class="arrival-time-label">Arrival Time</p>
                            <input type="time" id="editArrivalTime" class="arrival-time-input">
                        </div>
                        <div class="flight-no-container">
                            <p class="flight-no-label">Flight Code</p>
                            <input type="text" id="editFlightNo" class="flight-no-input" readonly>
                        </div>
                        <div class="price-container">
                            <p class="price-label">Ticket Price</p>
                            <input type="number" id="editPrice" class="price-input" min="0" step="0.01">
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="cancel-btn" onclick="closeEditModal()">Cancel</button>
                    <button class="confirm-btn" onclick="handleEditFlight()">Save Changes</button>
                </div>
            </div>
        </div>

        <script src="/js/admin-modal.js"></script>
        <script>
            let flightToDelete = null;

            function showDeleteModal(flightId) {
                flightToDelete = flightId;
                const modal = document.getElementById('deleteModal');
                modal.classList.add('show');
            }

            function closeDeleteModal() {
                const modal = document.getElementById('deleteModal');
                modal.classList.remove('show');
                flightToDelete = null;
            }

            async function confirmDelete() {
                if (!flightToDelete) return;
                
                try {
                    const response = await fetch(`/api/flights/${flightToDelete}`, {
                        method: 'DELETE',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    });

                    if (!response.ok) {
                        throw new Error('Failed to delete flight');
                    }

                    // Close the modal
                    closeDeleteModal();
                    
                    // Reload the page to show updated flight list
                    window.location.reload();
                } catch (error) {
                    console.error('Error deleting flight:', error);
                    alert('Failed to delete flight. Please try again.');
                }
            }
        </script>
        <script>
            document.addEventListener('DOMContentLoaded', function() {
                document.querySelectorAll('.edit-btn').forEach(button => {
                    button.addEventListener('click', function() {
                        console.log('Button clicked:', this.dataset);  // Debug log
                        const flightData = {
                            flightNumber: this.dataset.flightNumber,
                            departure: this.dataset.departure,
                            arrival: this.dataset.arrival,
                            departDate: this.dataset.departDate,
                            arrivalDate: this.dataset.arrivalDate,
                            departureTime: this.dataset.departureTime,
                            arrivalTime: this.dataset.arrivalTime,
                            price: this.dataset.price
                        };
                        console.log('Flight data:', flightData);  // Debug log
                        openEditModal(flightData);
                    });
                });

                window.onclick = function(event) {
                    const modal = document.getElementById('editFlightModal');
                    if (event.target === modal) {
                        closeEditModal();
                    }
                };
            });

            function openEditModal(flightData) {
                const modal = document.getElementById('editFlightModal');
                if (!modal) {
                    console.error('Edit modal element not found');
                    return;
                }

                console.log('Opening modal with data:', flightData);

                // Format date from "Wed, 04 Dec" to "YYYY-MM-DD"
                const formatDate = (dateStr) => {
                    if (!dateStr) return '';
                    try {
                        // Parse the date string
                        const [_, day, month] = dateStr.match(/(\d+)\s+([A-Za-z]+)/);
                        
                        // Map month names to numbers
                        const monthMap = {
                            'Jan': '01', 'Feb': '02', 'Mar': '03', 'Apr': '04',
                            'May': '05', 'Jun': '06', 'Jul': '07', 'Aug': '08',
                            'Sep': '09', 'Oct': '10', 'Nov': '11', 'Dec': '12'
                        };
                        
                        // Get current year
                        const year = new Date().getFullYear();
                        
                        // Format the date
                        return `${year}-${monthMap[month]}-${day.padStart(2, '0')}`;
                    } catch (error) {
                        console.error('Error formatting date:', error);
                        return '';
                    }
                };

                // Format time from "01:00:00 PM" to "HH:mm" (24-hour)
                const formatTime = (timeStr) => {
                    if (!timeStr) return '';
                    try {
                        // Parse time string
                        const [time, period] = timeStr.split(' ');
                        let [hours, minutes] = time.split(':').map(Number);
                        hours = parseInt(hours);

                        // Convert to 24-hour format
                        if (period === 'PM' && hours !== 12) {
                            hours += 12;
                        } else if (period === 'AM' && hours === 12) {
                            hours = 0;
                        }

                        // Format as HH:mm
                        return `${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}`;
                    } catch (error) {
                        console.error('Error formatting time:', error);
                        return '';
                    }
                };
                
                try {
                    // Set all form values with proper formatting
                    document.getElementById('editDeparture').value = flightData.departure || '';
                    document.getElementById('editArrival').value = flightData.arrival || '';
                    document.getElementById('editDepartDate').value = formatDate(flightData.departDate);
                    document.getElementById('editArrivalDate').value = formatDate(flightData.arrivalDate);
                    document.getElementById('editDepartureTime').value = formatTime(flightData.departureTime);
                    document.getElementById('editArrivalTime').value = formatTime(flightData.arrivalTime);
                    document.getElementById('editFlightNo').value = flightData.flightNumber || '';
                    document.getElementById('editPrice').value = flightData.price ? parseFloat(flightData.price.replace(/[^0-9.]/g, '')) : '';

                    modal.classList.add('show');
                    document.body.style.overflow = 'hidden';
                } catch (error) {
                    console.error('Error setting form values:', error);
                }
            }

            function closeEditModal() {
                const modal = document.getElementById('editFlightModal');
                if (modal) {
                    modal.classList.remove('show');
                }
            }

            async function handleEditFlight() {
                try {
                    // Format date from YYYY-MM-DD back to "Wed, 04 Dec" format
                    const formatDateForSubmission = (dateStr) => {
                        if (!dateStr) return '';
                        const date = new Date(dateStr);
                        const day = date.getDate().toString().padStart(2, '0');
                        const monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
                        const month = monthNames[date.getMonth()];
                        const dayNames = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];
                        const dayName = dayNames[date.getDay()];
                        return `${dayName}, ${day} ${month}`;
                    };

                    // Format time from HH:mm back to "hh:mm:00 AM/PM" format
                    const formatTimeForSubmission = (timeStr) => {
                        if (!timeStr) return '';
                        const [hours, minutes] = timeStr.split(':').map(Number);
                        const period = hours >= 12 ? 'PM' : 'AM';
                        const hour12 = hours % 12 || 12;
                        return `${hour12.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:00 ${period}`;
                    };

                    // Calculate flight duration between two times
                    const calculateDuration = (departTime, arriveTime) => {
                        // Convert times to minutes since midnight
                        const getMinutes = (timeStr) => {
                            const [time, period] = timeStr.split(' ');
                            let [hours, minutes] = time.split(':').map(Number);
                            if (period === 'PM' && hours !== 12) hours += 12;
                            if (period === 'AM' && hours === 12) hours = 0;
                            return hours * 60 + minutes;
                        };

                        let departMinutes = getMinutes(departTime);
                        let arriveMinutes = getMinutes(arriveTime);

                        // Handle case where flight arrives next day
                        if (arriveMinutes < departMinutes) {
                            arriveMinutes += 24 * 60; // Add 24 hours
                        }

                        const durationMinutes = arriveMinutes - departMinutes;
                        const hours = Math.floor(durationMinutes / 60);
                        const minutes = durationMinutes % 60;

                        return `${hours}h ${minutes}m`;
                    };

                    // Format price to include PHP and decimal places
                    const formatPrice = (price) => {
                        if (!price) return '';
                        return `PHP ${parseFloat(price).toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}`;
                    };

                    // Get form values
                    const flightNo = document.getElementById('editFlightNo').value;
                    const departure = document.getElementById('editDeparture').value;
                    const arrival = document.getElementById('editArrival').value;
                    const departDate = document.getElementById('editDepartDate').value;
                    const arrivalDate = document.getElementById('editArrivalDate').value;
                    const departureTime = document.getElementById('editDepartureTime').value;
                    const arrivalTime = document.getElementById('editArrivalTime').value;
                    const price = document.getElementById('editPrice').value;

                    // Validate required fields
                    if (!flightNo || !departure || !arrival || !departDate || !arrivalDate || 
                        !departureTime || !arrivalTime || !price) {
                        alert('Please fill in all required fields');
                        return;
                    }

                    // Format times for duration calculation
                    const formattedDepartTime = formatTimeForSubmission(departureTime);
                    const formattedArriveTime = formatTimeForSubmission(arrivalTime);
                    const duration = calculateDuration(formattedDepartTime, formattedArriveTime);

                    const flightData = {
                        flightNumber: flightNo,
                        departure: departure,
                        arrival: arrival,
                        departDate: formatDateForSubmission(departDate),
                        arrivalDate: formatDateForSubmission(arrivalDate),
                        departureTime: formattedDepartTime,
                        arrivalTime: formattedArriveTime,
                        duration: duration,
                        price: formatPrice(price)
                    };

                    console.log('Submitting flight data:', flightData); // Debug log

                    const response = await fetch('/api/flights/' + flightData.flightNumber, {
                        method: 'PUT',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(flightData)
                    });

                    if (!response.ok) {
                        throw new Error('Failed to update flight');
                    }

                    closeEditModal();
                    window.location.reload();
                } catch (error) {
                    console.error('Error updating flight:', error);
                    alert('Failed to update flight. Please try again.');
                }
            }
        </script>
        <footer class="footer">
            <div class="footer-content">
                <div class="logo">
                    <img src="/images/Logo 2.png" alt="Footer Logo">
                </div>
                <p>
                    <i class="fas fa-map-marker-alt"></i> Address: Xavier University – Ateneo de Cagayan, 73 Corrales Ave, Cagayan de Oro, 9000 Misamis Oriental, Philippines
                </p>
                <p><i class="fas fa-phone"></i> Phone: (63+) 9664201083 or (088) 123 4567</p>
                <p><i class="fas fa-envelope"></i> Email: flyjmdjairlines@gmail.com</p>
                <p><i class="fas fa-copyright"></i> 2024, JMDJ Development – JMDJ Airlines Ticketing System</p>
            </div>
        </footer>
    </body>
</html>